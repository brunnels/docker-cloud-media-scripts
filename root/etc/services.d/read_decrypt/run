#!/usr/bin/with-contenv bash
. "/usr/local/bin/util"

log "INFO" "Starting read_decrypt"

term_handler() {
    log "NOTICE" "read_decrypt SIGTERM received"
    s6-svc -t /var/run/s6/services/local_media
    s6-svc -t /var/run/s6/services/cloud_decrypt
    log "NOTICE" "read_decrypt unmounting ${read_decrypt_dir}"
    rclone_unmount ${read_decrypt_dir}
    log "NOTICE" "read_decrypt sending SIGTERM to child pid"
    kill -SIGTERM ${PID} >/dev/null 2>&1
    log "NOTICE" "read_decrypt exiting"
    exit $?
}

trap term_handler SIGTERM

check_read_decrypt

if [[ ! -d "${read_decrypt_dir}" ]]; then
    mkdir -p "${read_decrypt_dir}"
    chown ${PUID}:${PGID} ${read_decrypt_dir}
fi

if [[ -z "$(ls -A ${read_decrypt_dir})" ]]; then
    log "NOTICE" "Mounting read_decrypt Google Drive: ${read_decrypt_dir}"
    exec rclone mount ${read_decrypt_mount_options} "$@" "${read_decrypt_endpoint}" "${read_decrypt_dir}" &
    PID=${!}
    sleep 1
    fdmove -c 2 1 fdmove 1 3 echo >> /dev/null fdmove -c 1 2
    wait ${PID}
else
    log "WARN" "Google Drive read_decrypt mountpoint: ${read_decrypt_dir} already mounted."
fi

log "ERROR" "read_decrypt script crashed"
log "NOTICE" "read_decrypt unmounting ${read_decrypt_dir}"
s6-svc -t /var/run/s6/services/local_media
s6-svc -t /var/run/s6/services/cloud_decrypt
rclone_unmount ${read_decrypt_dir}
log "NOTICE" "read_decrypt exiting"
exit $?
