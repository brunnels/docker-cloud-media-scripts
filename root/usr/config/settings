#!/bin/bash

PUID=${PUID:-99}
PGID=${PGID:-100}
UMASK=${UMASK:-000}
USER_NAME=${USER_NAME:-nobody}

config_dir="/config"
#secrets_dir="/secrets"
# gcloud mount point
cloud_decrypt_dir="/cloud-decrypt"
# readonly vfs mount point for cache
read_decrypt_dir="/read-decrypt"
# local filesystem mount point
local_decrypt_dir="/local-decrypt"
# mergerfs mount point
local_media_dir="/local-media"

rclone_exclude_file="${config_dir}/exclude.txt"
rclone_config="--config=${config_dir}/rclone.conf"
rclone_options="${rclone_config} --buffer-size $(printenv COPY_BUFFER_SIZE) --checkers $(printenv COPY_CHECKERS)"
rclone_mount_options="${rclone_options} --allow-non-empty --allow-other --uid $(printenv PUID) --gid $(printenv PGID) --umask $(printenv UMASK)"

if [[ "$(printenv CLOUD_DECRYPT_OPTIONS)" != "" ]]; then
    rclone_mount_options="${rclone_mount_options} $(printenv CLOUD_DECRYPT_OPTIONS)"
fi

if [[ "$(printenv RCLONE_REMOTE_CONTROL)" != "0" ]]; then
    rclone_mount_options_rc="${rclone_mount_options} --rc"
fi

# can't set verbose and loglevel together
if [[ "$(printenv RCLONE_VERBOSE)" != "0" ]]; then
    rclone_mount_options="${rclone_mount_options} --verbose"
elif [[ "$(printenv RCLONE_LOG_LEVEL)" != "" ]]; then
    rclone_mount_options="${rclone_mount_options} --log-level $(printenv RCLONE_LOG_LEVEL)"
fi

read_decrypt_mount_options="${rclone_mount_options} --read-only"
if [[ "$(printenv READ_DECRYPT_OPTIONS)" != "" ]]; then
    read_decrypt_mount_options="${read_decrypt_mount_options} $(printenv READ_DECRYPT_OPTIONS)"
fi

mfs_options=""
if [[ "$(printenv MERGERFS_OPTIONS)" != "" ]]; then
    mfs_options="-o $(printenv MERGERFS_OPTIONS)"
fi

cloud_decrypt_endpoint=$(printenv CLOUD_DECRYPT_ENDPOINT | tr -d '"' | tr -d "'")
local_decrypt_endpoint=$(printenv LOCAL_DECRYPT_ENDPOINT | tr -d '"' | tr -d "'")
read_decrypt_endpoint=$(printenv CLOUD_DECRYPT_ENDPOINT | tr -d '"' | tr -d "'")
