#!/bin/bash

_puid=$(printenv USER_UID)
_pgid=$(printenv USER_GID)

# gcloud mount point
cloud_decrypt_dir="/cloud-decrypt"
# readonly vfs mount point
read_decrypt_dir="/read-decrypt"
# local filesystem mount point
local_decrypt_dir="/local-decrypt"
# mergerfs mount point
local_media_dir="/local-media"

rclone_config="--config=/config/rclone.conf"
rclone_exclude_file="/config/exclude.txt"
rclone_options="${rclone_config} --buffer-size $(printenv COPY_BUFFER_SIZE) --checkers $(printenv COPY_CHECKERS)"
rclone_mount_options="${rclone_options} --allow-non-empty --allow-other --uid ${_puid:-911} --gid ${_pgid:-911} --umask $(printenv RCLONE_MASK)"

rclone_read_mount_options="${rclone_mount_options} --read-only"
rclone_mount_options="${rclone_mount_options} $(printenv RCLONE_CLOUD_OPTIONS)"
rclone_read_mount_options="${rclone_read_mount_options} $(printenv RCLONE_VFS_READ_OPTIONS)"

if [ "$(printenv RCLONE_VERBOSE)" != "0" ]; then
  rclone_mount_options="${rclone_mount_options} --verbose"
fi

if [ "$(printenv RCLONE_REMOTE_CONTROL)" != "0" ]; then
  rclone_mount_options_rc=" --rc"
else
  rclone_mount_options_rc=""
fi

if [ "$(printenv RCLONE_LOG_LEVEL)" != "" ]; then
  rclone_mount_options="${rclone_mount_options} --log-level $(printenv RCLONE_LOG_LEVEL)"
fi

mfs_options="-o uid=${_puid:-911} -o gid=${_pgid:-911} -o $(printenv MERGERFS_OPTIONS)"


rclone_cloud_endpoint=$(printenv RCLONE_CLOUD_ENDPOINT | tr -d '"' | tr -d "'")
rclone_local_endpoint=$(printenv RCLONE_LOCAL_ENDPOINT | tr -d '"' | tr -d "'")
rclone_read_endpoint=$(printenv RCLONE_CLOUD_ENDPOINT | tr -d '"' | tr -d "'")

if [ ! -f "${rclone_exclude_file}" ]; then
  touch ${rclone_exclude_file}
fi

log_dir="/log"
if [ ! -d "${log_dir}" ]; then
	mkdir -p "${log_dir}"
fi

secrets_dir="/secrets"
if [ -d "${secrets_dir}" ]; then
    cp ${secrets_dir}/* /config/
fi

cloud_upload_time=$(printenv CLOUDUPLOADTIME)
rm_delete_time=$(printenv RMDELETETIME)
cron_log=/log/cron.log
