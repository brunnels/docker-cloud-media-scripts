#!/bin/bash
. "config"

mount_read_gdrive () {
	check_rclone_read

	if [[ ! -d "${read_decrypt_dir}" ]]; then
		mkdir -p "${read_decrypt_dir}"
	fi

	if [[ -z "$(ls -A ${read_decrypt_dir})" ]]; then
	  log "NOTICE" "Mounting read Google Drive: ${read_decrypt_dir}"
	  rclone mount ${rclone_read_mount_options} "$@" "${rclone_read_endpoint}" "${read_decrypt_dir}" &

	  sleep 5

    while [[ -z "$(ls -A ${read_decrypt_dir})" ]]
    do
      log "WARN" "Waiting for mount ${read_decrypt_dir} ..."
      sleep 10
    done
	else
	  log "WARN" "Google Drive read mountpoint: ${read_decrypt_dir} already mounted."
	fi
}

mount_gdrive () {
	check_rclone_cloud

	if [[ ! -d "${cloud_decrypt_dir}" ]]; then
		mkdir -p "${cloud_decrypt_dir}"
	fi

	if [[ -z "$(ls -A ${read_decrypt_dir})" ]]; then
	  log "ERROR" "Google Drive read mountpoint: ${read_decrypt_dir} NOT already mounted. Bugging out"
		exit 02
  else
    log "NOTICE" "Mounting direct Google Drive: ${cloud_decrypt_dir}"
		rclone mount ${rclone_mount_options} "$@" "${rclone_cloud_endpoint}" "${cloud_decrypt_dir}" &
  fi
}

mount_union () {
	if [[ ! -d "${local_media_dir}" ]]; then
		mkdir -p "${local_media_dir}"
	fi

	if [[ ! -d "${local_decrypt_dir}" ]]; then
		mkdir -p "${local_decrypt_dir}"
	fi

  if [[ $(ps -ef | grep "mergerfs" | grep -v "grep" | wc -l) == "0" ]]; then
    mfs_mounts="${local_decrypt_dir}:${read_decrypt_dir}:${cloud_decrypt_dir}"
    log "NOTICE" "Mounting mergerfs: ${local_media_dir}"
    mergerfs ${mfs_options} "${mfs_mounts}" "${local_media_dir}"
  else
    log "WARN" "mergerfs mountpoint: ${local_media_dir} already mounted."
  fi
}

set_crontab () {
	#Output environmental variables for cron
	env >> /etc/environment
  if ([[ "$(printenv USE_LOGFILES)" == "0" ]]); then
    cron_log="/proc/1/fd/1"
  fi
  echo "$(printenv CLOUD_UPLOAD_CRON) /usr/local/bin/runscript cloudupload >> ${cron_log} 2>&1" >> /etc/crontabs/root
  echo "$(printenv RM_DELETE_CRON) /usr/local/bin/runscript rmlocal >> ${cron_log} 2>&1" >> /etc/crontabs/root
  echo "$(printenv CHECKMOUNTS_CRON) /usr/local/bin/runscript checkmounts >> ${cron_log} 2>&1" >> /etc/crontabs/root
}

precache () {
	if ([[ "$(printenv RCLONE_PRECACHE)" == "1" ]]); then
	  log "NOTICE" "Starting VFS pre-cache"
		rclone rc vfs/refresh recursive=true >/dev/null 2>&1
		log "NOTICE" "VFS pre-cache complete"
	fi
}

###############################################################################

check_running
mount_read_gdrive
mount_gdrive
mount_union
set_crontab
precache
